import React from 'react'
import { motion } from 'framer-motion'

/**
 * SuperLoader
 * Props:
 *  - label (string) top main label (default: 'Thinking...')
 *  - subtitle (string) optional subtitle under label
 *  - size (number) diameter in px for the visual (default: 120)
 */
export default function SuperLoader({ label = 'Thinking...', subtitle = '', size = 120 }) {
  const radius = size / 2
  const stroke = Math.max(3, Math.round(size * 0.035))
  const orbitDistance = radius + 28

  const ringVariants = {
    rotateCW: { rotate: 360, transition: { repeat: Infinity, ease: 'linear', duration: 8 } },
    rotateCCW: { rotate: -360, transition: { repeat: Infinity, ease: 'linear', duration: 12 } }
  }

  const pulse = { scale: [1, 1.12, 1], opacity: [1, 0.9, 1], transition: { duration: 1.6, repeat: Infinity } }

  const particleVariants = (delay = 0) => ({
    animate: {
      rotate: [0, 360],
      transition: { repeat: Infinity, duration: 6 + Math.random() * 3, ease: 'linear', delay }
    }
  })

  return (
    <div
      role="status"
      aria-live="polite"
      className="absolute inset-0 z-50 flex items-center justify-center pointer-events-none"
      style={{ padding: 24 }}
    >
      <div className="pointer-events-auto bg-white/92 backdrop-blur-md rounded-2xl p-6 flex flex-col items-center gap-4 shadow-glow"
           style={{ minWidth: 260, maxWidth: '86vw', boxShadow: '0 20px 60px rgba(15,23,42,0.18)' }}>
        {/* Visual */}
        <div style={{ width: size + 80, display: 'flex', justifyContent: 'center' }}>
          <svg width={size + 80} height={size + 80} viewBox={`${-orbitDistance - 10} ${-orbitDistance - 10} ${2 * (orbitDistance + 10)} ${2 * (orbitDistance + 10)}`} xmlns="http://www.w3.org/2000/svg" aria-hidden>
            <defs>
              <linearGradient id="g1" x1="0" x2="1">
                <stop offset="0%" stopColor="#4f46e5" stopOpacity="1"/>
                <stop offset="100%" stopColor="#06b6d4" stopOpacity="1"/>
              </linearGradient>
              <linearGradient id="g2" x1="0" x2="1">
                <stop offset="0%" stopColor="#7c3aed" stopOpacity="0.85"/>
                <stop offset="100%" stopColor="#60a5fa" stopOpacity="0.65"/>
              </linearGradient>
              <radialGradient id="g3">
                <stop offset="0%" stopColor="#ffffff" stopOpacity="1" />
                <stop offset="60%" stopColor="#a78bfa" stopOpacity="0.18" />
                <stop offset="100%" stopColor="#06b6d4" stopOpacity="0.06" />
              </radialGradient>
            </defs>

            {/* outer rotating gradient ring (slow) */}
            <motion.g variants={ringVariants} animate="rotateCCW" style={{ transformOrigin: '50% 50%' }}>
              <circle cx="0" cy="0" r={radius + 26} fill="none" stroke="url(#g1)" strokeWidth={stroke} strokeOpacity="0.12" />
              <circle cx="0" cy="0" r={radius + 26} fill="none" stroke="url(#g1)" strokeWidth={1.2} strokeDasharray="6 18" strokeOpacity="0.22" />
            </motion.g>

            {/* inner rotating ring (faster, opposite) */}
            <motion.g variants={ringVariants} animate="rotateCW" style={{ transformOrigin: '50% 50%' }}>
              <circle cx="0" cy="0" r={radius + 8} fill="none" stroke="url(#g2)" strokeWidth={stroke * 0.9} strokeOpacity="0.18" />
              <circle cx="0" cy="0" r={radius + 8} fill="none" stroke="url(#g2)" strokeWidth={1} strokeDasharray="4 12" strokeOpacity="0.28" />
            </motion.g>

            {/* central soft glow */}
            <circle cx="0" cy="0" r={radius} fill="url(#g3)" opacity="0.95" />

            {/* pulsating core */}
            <motion.circle cx="0" cy="0" r={Math.max(8, radius * 0.22)} fill="#fff" initial={{ scale: 1 }} animate={pulse} style={{ transformOrigin: '50% 50%' }} />

            {/* three orbiting particles (motion groups) */}
            <motion.g variants={particleVariants(0)} animate="animate" style={{ transformOrigin: '50% 50%' }}>
              <circle cx={orbitDistance} cy="0" r={6} fill="#fff" opacity="1" style={{ filter: 'drop-shadow(0 6px 12px rgba(79,70,229,0.18))' }} />
            </motion.g>

            <motion.g variants={particleVariants(0.4)} animate="animate" style={{ transformOrigin: '50% 50%' }}>
              <circle cx={-orbitDistance * 0.66} cy={orbitDistance * 0.75 * -0.6} r={5} fill="#fff" opacity="0.92" style={{ filter: 'drop-shadow(0 6px 10px rgba(6,182,212,0.14))' }} />
            </motion.g>

            <motion.g variants={particleVariants(0.9)} animate="animate" style={{ transformOrigin: '50% 50%' }}>
              <circle cx={orbitDistance * 0.28} cy={-orbitDistance * 0.85} r={4} fill="#fff" opacity="0.9" style={{ filter: 'drop-shadow(0 6px 8px rgba(124,58,237,0.12))' }} />
            </motion.g>
          </svg>
        </div>

        {/* Labels */}
        <div className="text-center">
          <div className="text-sm font-semibold" style={{ letterSpacing: 0.2 }}>{label}</div>
          {subtitle && <div className="text-xs text-gray-500 mt-1">{subtitle}</div>}
        </div>

        {/* accessible live region for status updates */}
        <span className="sr-only" aria-live="polite">{label} {subtitle}</span>
      </div>
    </div>
  )
}
