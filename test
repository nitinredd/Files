import fitz  # PyMuPDF
import pytesseract
from PIL import Image
import os
import io

def pdf_to_images(pdf_path, output_folder):
    """
    Convert PDF pages to images using PyMuPDF
    """
    # Create output folder if it doesn't exist
    if not os.path.exists(output_folder):
        os.makedirs(output_folder)
    
    # Open the PDF
    pdf_document = fitz.open(pdf_path)
    
    # Get the base name of the PDF file
    base_name = os.path.splitext(os.path.basename(pdf_path))[0]
    
    images = []
    # Iterate through pages
    for page_num in range(pdf_document.page_count):
        page = pdf_document[page_num]
        
        # Convert page to image
        pix = page.get_pixmap()
        img_data = pix.tobytes("png")
        
        # Convert to PIL Image
        img = Image.open(io.BytesIO(img_data))
        images.append(img)
        
        # Save the image
        img_path = os.path.join(output_folder, f"{base_name}_page_{page_num + 1}.png")
        img.save(img_path)
    
    pdf_document.close()
    return images

def process_images_with_tesseract(images, output_folder):
    """
    Perform OCR on images using Tesseract
    """
    # Configure Tesseract for Japanese
    pytesseract.pytesseract.tesseract_cmd = r'tesseract'  # Update this path if needed
    
    for i, image in enumerate(images):
        # Perform OCR
        text = pytesseract.image_to_string(image, lang='jpn')
        
        # Save the OCR text
        output_path = os.path.join(output_folder, f"ocr_text_page_{i + 1}.txt")
        with open(output_path, 'w', encoding='utf-8') as f:
            f.write(text)

def main():
    # Input and output paths
    pdf_path = input("Enter the path to your PDF file: ")
    output_folder = input("Enter the output folder path: ")
    
    try:
        # Convert PDF to images
        print("Converting PDF to images...")
        images = pdf_to_images(pdf_path, output_folder)
        
        # Process images with Tesseract
        print("Performing OCR on images...")
        process_images_with_tesseract(images, output_folder)
        
        print(f"Processing complete! Check the output folder: {output_folder}")
        
    except Exception as e:
        print(f"An error occurred: {str(e)}")

if __name__ == "__main__":
    main()
