import React, { useState, useRef, useEffect } from 'react'
import axios from 'axios'
import './Chatbot.css'

export default function Chatbot({ apiUrl, backgroundImage, samplePrompts }) {
  const [open, setOpen] = useState(false)
  const [messages, setMessages] = useState([])
  const [input, setInput] = useState('')
  const messagesEndRef = useRef(null)

  useEffect(() => {
    if (open && messages.length === 0) {
      setMessages([
        { from: 'bot', text: 'Hi! How can I help?' },
        { from: 'bot', options: samplePrompts }
      ])
    }
  }, [open])

  useEffect(() => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' })
  }, [messages])

  const send = async (text) => {
    setMessages(m => [...m, { from: 'user', text }])
    setInput('')
    const res = await axios.post(apiUrl, { message: text })
    if (res.data.tables) {
      setMessages(m => [
        ...m,
        { from: 'bot', text: res.data.response },
        { from: 'bot', tables: res.data.tables }
      ])
    } else {
      setMessages(m => [...m, { from: 'bot', text: res.data.response }])
    }
  }

  return (
    <>
      <div
        className={`chatbot-widget ${open ? 'open' : ''}`}
        style={{ backgroundImage: `url(${backgroundImage})` }}
      >
        <div className="chat-header" onClick={() => setOpen(o => !o)}>
          {open ? 'â€“â€“' : 'ðŸ’¬'}
        </div>
        {open && (
          <div className="chat-body">
            <div className="messages">
              {messages.map((m, i) =>
                m.options ? (
                  <div key={i} className="bot-options">
                    {m.options.map((opt, j) => (
                      <button key={j} onClick={() => send(opt)}>{opt}</button>
                    ))}
                  </div>
                ) : m.tables ? (
                  m.tables.map((tbl, ti) => (
                    <div key={ti}>
                      <strong>Sheet: {tbl.sheet}</strong>
                      <table>
                        <thead>
                          <tr>{tbl.columns.map((c, ci) => <th key={ci}>{c}</th>)}</tr>
                        </thead>
                        <tbody>
                          {tbl.rows.map((row, ri) => (
                            <tr key={ri}>{row.map((cell, ci) => <td key={ci}>{cell}</td>)}</tr>
                          ))}
                        </tbody>
                      </table>
                    </div>
                  ))
                ) : (
                  <div key={i} className={m.from}>{m.text}</div>
                )
              )}
              <div ref={messagesEndRef} />
            </div>
            <div className="chat-input">
              <input
                value={input}
                onChange={e => setInput(e.target.value)}
                onKeyDown={e => e.key === 'Enter' && input.trim() && send(input)}
                placeholder="Type your questionâ€¦"
              />
              <button disabled={!input.trim()} onClick={() => send(input)}>Send</button>
            </div>
          </div>
        )}
      </div>
    </>
  )
}
