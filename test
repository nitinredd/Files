def changed_data_either85_f2s(reference_df, test_df):
    # Initialize with max possible index
    ref_index = len(reference_df)
    test_index = len(test_df)
    change_reference_df = reference_df.copy()
    change_test_df = test_df.copy()
    
    # Get mean values
    ref_means = change_reference_df.iloc[:, 1:].mean(axis=1)
    test_means = change_test_df.iloc[:, 1:].mean(axis=1)

    # Find first >=85 in reference
    for i in range(len(ref_means)):
        if ref_means[i] >= 85:
            ref_index = i
            break

    # Find first >=85 in test (fixed from original)
    for i in range(len(test_means)):
        if test_means[i] >= 85:
            test_index = i
            break

    # Determine truncation point
    final_index = min(ref_index, test_index)
    
    # Handle case where neither reaches 85
    if final_index == len(reference_df):
        final_index = len(reference_df) - 1  # Use last valid index

    # Ensure valid index range
    final_index = min(final_index, len(reference_df)-1)
    
    # Truncate dataframes
    change_reference_df = change_reference_df.iloc[:final_index+1]
    change_test_df = change_test_df.iloc[:final_index+1]
    
    # Calculate f2
    f2s(change_reference_df, change_test_df)
