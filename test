import React from 'react'
import { motion } from 'framer-motion'

/**
 * SuperLoaderCompact
 * - small, bright, non-dimmed, premium loader for inline or small-overlay use
 * - props:
 *    label?: string   (short label below visual)
 *    size?: number    (visual diameter in px, default 72)
 *    subtle?: boolean (if true, no backdrop; default true)
 *
 * Usage: <SuperLoaderCompact label="Thinking..." size={72} subtle />
 */
export default function SuperLoaderCompact({ label = 'Thinkingâ€¦', size = 72, subtle = true }) {
  const r = size / 2
  const stroke = Math.max(2, Math.round(size * 0.045))
  const orbitR = r + 14

  // small, soft animations optimized for GPU
  const ring = { animate: { rotate: 360 }, transition: { repeat: Infinity, duration: 6, ease: 'linear' } }
  const ringOpp = { animate: { rotate: -360 }, transition: { repeat: Infinity, duration: 9, ease: 'linear' } }
  const pulse = { animate: { scale: [1, 1.08, 1], opacity: [1, 0.95, 1] }, transition: { duration: 1.2, repeat: Infinity } }

  const containerStyle = {
    pointerEvents: 'none',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
  }

  const cardStyle = {
    pointerEvents: 'auto',
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    gap: 8,
    padding: 10,
    borderRadius: 14,
    background: 'rgba(255,255,255,0.85)',
    boxShadow: '0 8px 22px rgba(15,23,42,0.08)',
    backdropFilter: 'blur(6px) saturate(120%)',
  }

  return (
    <div style={containerStyle} aria-live="polite" role="status">
      <div style={subtle ? { ...cardStyle, background: 'rgba(255,255,255,0.88)' } : { ...cardStyle, background: 'transparent', boxShadow: 'none' }}>
        <svg width={size + 36} height={size + 36} viewBox={`${-orbitR - 6} ${-orbitR - 6} ${2*(orbitR + 6)} ${2*(orbitR + 6)}`} aria-hidden>
          <defs>
            <linearGradient id="c1" x1="0" x2="1">
              <stop offset="0%" stopColor="#4f46e5" stopOpacity="1" />
              <stop offset="100%" stopColor="#06b6d4" stopOpacity="1" />
            </linearGradient>
            <radialGradient id="gcore">
              <stop offset="0%" stopColor="#fff" stopOpacity="1" />
              <stop offset="60%" stopColor="#c7b3ff" stopOpacity="0.24" />
              <stop offset="100%" stopColor="#06b6d4" stopOpacity="0.06" />
            </radialGradient>
          </defs>

          {/* slow subtle outer ring */}
          <motion.g style={{ transformOrigin: '50% 50%' }} {...ringOpp}>
            <circle cx="0" cy="0" r={r + 16} fill="none" stroke="url(#c1)" strokeWidth={stroke * 0.7} strokeOpacity="0.10" />
            <circle cx="0" cy="0" r={r + 16} fill="none" stroke="url(#c1)" strokeWidth={1} strokeDasharray="3 10" strokeOpacity="0.18" />
          </motion.g>

          {/* faster inner ring */}
          <motion.g style={{ transformOrigin: '50% 50%' }} {...ring}>
            <circle cx="0" cy="0" r={r + 4} fill="none" stroke="url(#c1)" strokeWidth={stroke * 0.9} strokeOpacity="0.16" />
            <circle cx="0" cy="0" r={r + 4} fill="none" stroke="url(#c1)" strokeWidth={0.8} strokeDasharray="4 8" strokeOpacity="0.22" />
          </motion.g>

          {/* central soft core */}
          <circle cx="0" cy="0" r={r - 2} fill="url(#gcore)" opacity="0.98" />

          {/* bright minimal core dot with gentle pulse */}
          <motion.circle cx="0" cy="0" r={Math.max(6, r * 0.18)} fill="#fff" style={{ transformOrigin: '50% 50%' }} {...pulse} />

          {/* 2 tiny orbiting highlights */}
          <motion.g style={{ transformOrigin: '50% 50%' }} animate={{ rotate: [0, 360] }} transition={{ repeat: Infinity, duration: 5, ease: 'linear' }}>
            <circle cx={orbitR} cy={0} r={4} fill="#fff" opacity="0.96" style={{ filter: 'drop-shadow(0 6px 8px rgba(79,70,229,0.12))' }} />
          </motion.g>

          <motion.g style={{ transformOrigin: '50% 50%' }} animate={{ rotate: [0, -360] }} transition={{ repeat: Infinity, duration: 8, ease: 'linear' }}>
            <circle cx={-orbitR * 0.66} cy={orbitR * 0.62} r={3.2} fill="#fff" opacity="0.9" style={{ filter: 'drop-shadow(0 6px 8px rgba(6,182,212,0.08))' }} />
          </motion.g>
        </svg>

        {label && <div style={{ fontSize: 12, fontWeight: 600, color: '#0f172a', letterSpacing: 0.2 }}>{label}</div>}
      </div>
    </div>
  )
}
