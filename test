# debug_force_plotly.py
import streamlit as st
import numpy as np
from scipy.stats import norm
import plotly.graph_objs as go

st.set_page_config(page_title="Force-Plotly Debug", layout="wide")
st.title("Force Plotly Visibility Debug")

# Recreate sample from your reported stats
count = 10000
mean = 81.940
sd = 6.355
_min = 59.172
_max = 99.437

rng = np.random.default_rng(12345)
vals = rng.normal(loc=mean, scale=sd, size=count)
vals = np.clip(vals, _min, _max)
vals_sorted = np.sort(vals)
n = len(vals_sorted)

st.write(f"count={n}, mean={vals_sorted.mean():.3f}, sd={vals_sorted.std(ddof=1):.3f}, min={vals_sorted.min():.3f}, max={vals_sorted.max():.3f}")

# Theoretical values mapped to f2 units (same as before)
probs = (np.arange(1, n+1) - 0.5) / n
z_theor = norm.ppf(probs)
theor = vals_sorted.mean() + vals_sorted.std(ddof=1) * z_theor

# Force-test 1: Plot ONLY points with VERY LARGE, HIGH-CONTRAST styling (no diagonal, no envelope)
fig1 = go.Figure()
fig1.add_trace(go.Scatter(
    x=theor,
    y=vals_sorted,
    mode='markers',
    marker=dict(
        size=14,                  # large
        color='blue',             # strong color
        symbol='diamond-open',    # open diamond so fill/edge obvious
        line=dict(width=3, color='yellow'),  # thick border in contrasting color
        opacity=1.0
    ),
    name='BIG points'
))
fig1.update_layout(title="FORCE TEST: Only large points (no diagonal/envelope)", xaxis_title="theor (f2 units)", yaxis_title="sample f2", height=480, plot_bgcolor='white')
# Force ranges so nothing is clipped
pad = 0.05 * (max(theor.max(), vals_sorted.max()) - min(theor.min(), vals_sorted.min()))
fig1.update_xaxes(range=[theor.min()-pad, theor.max()+pad])
fig1.update_yaxes(range=[vals_sorted.min()-pad, vals_sorted.max()+pad])

st.plotly_chart(fig1, use_container_width=True)

# Force-test 2: show points with labels for first 20 points
sample_idx = np.linspace(0, n-1, 20, dtype=int)
fig2 = go.Figure()
fig2.add_trace(go.Scatter(
    x=theor[sample_idx],
    y=vals_sorted[sample_idx],
    mode='markers+text',
    marker=dict(size=12, color='black', symbol='x', line=dict(width=2, color='white')),
    text=[f"{i}" for i in sample_idx],
    textposition='top center'
))
fig2.update_layout(title="Labelled subset of points (first 20 indices)", height=360, plot_bgcolor='white')
st.plotly_chart(fig2, use_container_width=True)

# Print first 10 (x,y) pairs to page so you can visually inspect numbers
st.markdown("First 10 theoretical -> sample pairs (theor -> sample):")
pairs = list(zip(np.round(theor[:10],3), np.round(vals_sorted[:10],3)))
st.write(pairs)

# Attempt server-side static export (Kaleido) to double-check rendering independent of browser
st.markdown("Attempt server-side static PNG export via Plotly (requires `kaleido`).")
try:
    img_bytes = fig1.to_image(format="png", width=900, height=480)
    st.image(img_bytes, caption="Server-rendered PNG (kaleido)", use_column_width=True)
except Exception as e:
    st.error(f"PNG export failed (kaleido missing or error). Exception: {e}")
    st.info("If you want this export to work, run: pip install -U kaleido and restart the app.")
