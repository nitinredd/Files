def create_pdf(translated_content):
    buffer = io.BytesIO()
    c = canvas.Canvas(buffer, pagesize=letter)
    width, height = letter
    styles = getSampleStyleSheet()
    normal_style = styles['Normal']

    for page_content in translated_content:
        y = height - 50
        for content_type, content in page_content:
            if content_type == "text":
                for line in content.split('\n'):
                    p = Paragraph(line, normal_style)
                    p_width, p_height = p.wrap(width - 100, height)
                    if y - p_height < 50:
                        c.showPage()
                        y = height - 50
                    p.drawOn(c, 50, y - p_height)
                    y -= p_height + 10
            elif content_type == "table":
                table = Table(content)
                table.setStyle(TableStyle([
                    ('BACKGROUND', (0, 0), (-1, 0), colors.grey),
                    ('TEXTCOLOR', (0, 0), (-1, 0), colors.whitesmoke),
                    ('ALIGN', (0, 0), (-1, -1), 'CENTER'),
                    ('FONTNAME', (0, 0), (-1, 0), 'Helvetica-Bold'),
                    ('FONTSIZE', (0, 0), (-1, 0), 14),
                    ('BOTTOMPADDING', (0, 0), (-1, 0), 12),
                    ('BACKGROUND', (0, 1), (-1, -1), colors.beige),
                    ('TEXTCOLOR', (0, 1), (-1, -1), colors.black),
                    ('ALIGN', (0, 0), (-1, -1), 'CENTER'),
                    ('FONTNAME', (0, 1), (-1, -1), 'Helvetica'),
                    ('FONTSIZE', (0, 1), (-1, -1), 12),
                    ('TOPPADDING', (0, 1), (-1, -1), 6),
                    ('BOTTOMPADDING', (0, 1), (-1, -1), 6),
                    ('GRID', (0, 0), (-1, -1), 1, colors.black)
                ]))
                table_width, table_height = table.wrap(width - 100, height)
                if y - table_height < 50:
                    c.showPage()
                    y = height - 50
                table.drawOn(c, 50, y - table_height)
                y -= table_height + 20
        c.showPage()

    c.save()
    buffer.seek(0)
    return buffer
