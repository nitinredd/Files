import io

def display_structured_content(content):
    # … [other expanders] …

    # Tabular Data (robust handling of multiple tables)
    table_section_match = re.search(
        r"### Tabular Data\n(.*?)(?=(?:###\s)|\Z)",
        content, re.DOTALL
    )
    if table_section_match:
        raw = table_section_match.group(1).strip()
        # Regex to capture each markdown table (header, separator, and rows)
        table_patterns = re.findall(
            r"(\|[^\n]*\|\s*\n\|[-:\s|]*\|\s*\n(?:\|[^\n]*\|\s*\n?)*)",
            raw, re.DOTALL
        )
        if table_patterns:
            for idx, tbl_md in enumerate(table_patterns, start=1):
                with st.expander(f"Table {idx}", expanded=True):
                    try:
                        # Clean up each line: strip leading/trailing pipes & spaces
                        lines = [
                            line.strip().strip("|")
                            for line in tbl_md.splitlines()
                            if line.strip()
                        ]
                        cleaned = "\n".join(lines)
                        # Use pandas to parse as CSV with '|' delimiter
                        df = pd.read_csv(
                            io.StringIO(cleaned),
                            sep="\\|",
                            engine="python"
                        )
                        st.dataframe(df, use_container_width=True)
                    except Exception as e:
                        # Fallback: show raw markdown if parsing fails
                        st.markdown(f"<pre>{tbl_md}</pre>", unsafe_allow_html=True)
        else:
            # No tables detected, just render whatever is there
            st.markdown(raw)
