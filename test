print(" ")
dissolution_curve(reference_df,test_df)
dissolution_curve_interval(reference_df, test_df)
print(" ")
print("Choose Market:")
print("Choose 1 for FDA f2 Analysis")
# [Previous other options 3-16 remain the same]

input1 = int(input("Input number: "))

if input1 == 1:
    # First check if data meets criteria for both >= 85
    both_85_criteria = check_both_85(reference_df, test_df)  # You'll need to implement this function
    either_85_criteria = check_either_85(reference_df, test_df)  # You'll need to implement this function
    
    print(" ")
    print("CV check results:")
    cv_check = check_cv(test_df) and check_cv(reference_df)
    print("CV should be less than 20 at the first (non-zero) time point and less than 10 at the following time points for both products -", cv_check)
    print(" ")
    
    # Remove time point 0 if present
    if reference_df.iloc[0, 0] == 0 or reference_df.iloc[0, 0] == '0':
        reference_df = reference_df.drop(reference_df.index[0])
        reference_df = reference_df.reset_index(drop=True)
    
    if test_df.iloc[0, 0] == 0 or test_df.iloc[0, 0] == '0':
        test_df = test_df.drop(test_df.index[0])
        test_df = test_df.reset_index(drop=True)
    
    # Check time points alignment
    time_points_check = check_same_time_points(test_df, reference_df)
    
    if time_points_check:
        # Always perform f2 calculations
        if both_85_criteria:
            print("\nAnalysis based on FDA Both >= 85 criteria:")
            changed_data_both85_f2s(reference_df, test_df)
            if not cv_check:
                print("\nWarning: CV requirements not met. Results may not be valid for regulatory purposes.")
                print("Loading bootstrap percentile.. & Loading BCA...")
                changed_data_both85_bca(reference_df, test_df)
        elif either_85_criteria:
            print("\nAnalysis based on FDA Either >= 85 criteria:")
            changed_data_either85_FDA_f2s(reference_df, test_df)
            if not cv_check:
                print("\nWarning: CV requirements not met. Results may not be valid for regulatory purposes.")
                print("Loading bootstrap percentile.. & Loading BCA...")
                changed_data_either85_FDA_bca(reference_df, test_df)
        else:
            print("\nWarning: Neither 'Both >= 85' nor 'Either >= 85' criteria are met.")
            print("Performing f2 calculations anyway for reference:")
            # Perform both calculations for reference
            print("\nResults using Both >= 85 criteria:")
            changed_data_both85_f2s(reference_df, test_df)
            print("\nResults using Either >= 85 criteria:")
            changed_data_either85_FDA_f2s(reference_df, test_df)
    else:
        print("Error: Time points between test and reference datasets do not match.")
        print("Calculations cannot be performed.")

# Helper functions to implement:
def check_both_85(reference_df, test_df):
    """
    Check if both reference and test meet the >= 85% criteria
    Returns True if criteria is met, False otherwise
    """
    ref_max = reference_df.iloc[:, 1:].mean(axis=1).max()
    test_max = test_df.iloc[:, 1:].mean(axis=1).max()
    return ref_max >= 85 and test_max >= 85

def check_either_85(reference_df, test_df):
    """
    Check if either reference or test meet the >= 85% criteria
    Returns True if criteria is met, False otherwise
    """
    ref_max = reference_df.iloc[:, 1:].mean(axis=1).max()
    test_max = test_df.iloc[:, 1:].mean(axis=1).max()
    return ref_max >= 85 or test_max >= 85
