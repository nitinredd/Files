import streamlit as st
import PyPDF2
import io
from gtts import gTTS
import tempfile
import os

def extract_text_from_pdf(pdf_file):
    """Extract text from uploaded PDF file"""
    pdf_reader = PyPDF2.PdfReader(pdf_file)
    text = ""
    for page in pdf_reader.pages:
        text += page.extract_text()
    return text

def text_to_speech(text, language='es'):
    """Convert text to speech using gTTS"""
    try:
        # Create gTTS object
        tts = gTTS(text=text, lang=language, slow=False)
        
        # Create temporary file
        with tempfile.NamedTemporaryFile(delete=False, suffix='.mp3') as fp:
            temp_filename = fp.name
            # Save speech to temporary file
            tts.save(temp_filename)
            return temp_filename
    except Exception as e:
        st.error(f"Error in text to speech conversion: {str(e)}")
        return None

def main():
    st.title("Spanish PDF to Speech Converter")
    st.write("Upload a PDF file with Spanish text to convert it to speech")

    # File uploader
    uploaded_file = st.file_uploader("Choose a PDF file", type=['pdf'])

    if uploaded_file is not None:
        try:
            # Extract text from PDF
            text = extract_text_from_pdf(uploaded_file)

            # Display extracted text
            st.subheader("Extracted Text")
            st.text_area("", text, height=200)

            # Convert button
            if st.button("Convert to Speech"):
                with st.spinner("Converting text to speech..."):
                    # Convert text to speech
                    audio_file = text_to_speech(text)

                    if audio_file:
                        # Read the audio file
                        with open(audio_file, 'rb') as f:
                            audio_bytes = f.read()

                        # Create download button
                        st.audio(audio_bytes, format='audio/mp3')
                        
                        # Add download button for the audio file
                        st.download_button(
                            label="Download Audio",
                            data=audio_bytes,
                            file_name="spanish_audio.mp3",
                            mime="audio/mp3"
                        )

                        # Clean up temporary file
                        os.unlink(audio_file)

        except Exception as e:
            st.error(f"Error processing the PDF: {str(e)}")

if __name__ == "__main__":
    main()
