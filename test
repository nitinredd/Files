pip install streamlit img2mol rdkit-pypi pillow
import streamlit as st
from PIL import Image
import img2mol
from rdkit import Chem
from rdkit.Chem import AllChem
import tempfile
import os
import base64

def image_to_smiles(uploaded_image):
    img = Image.open(uploaded_image).convert("RGB")
    arr = img2mol.preprocess_image(img)
    result = img2mol.core.predict(arr, input_type='pixel', output_type='smiles')
    if not result:
        raise ValueError("img2mol couldn't extract SMILES from image.")
    return result

def smiles_to_mol_block(smiles):
    mol = Chem.MolFromSmiles(smiles)
    if mol is None:
        raise ValueError("Invalid SMILES structure.")
    mol = Chem.AddHs(mol)
    AllChem.EmbedMolecule(mol)
    return Chem.MolToMolBlock(mol)

def get_mol_download_link(molblock, filename="structure.mol"):
    with tempfile.NamedTemporaryFile(delete=False, suffix=".mol") as tmp_file:
        tmp_file.write(molblock.encode("utf-8"))
        tmp_file_path = tmp_file.name

    with open(tmp_file_path, "rb") as file:
        b64 = base64.b64encode(file.read()).decode()
        href = f'<a href="data:chemical/x-mdl-molfile;base64,{b64}" download="{filename}">üì• Download MOL file</a>'
    os.remove(tmp_file_path)
    return href

# Streamlit UI
st.set_page_config(page_title="Image to MOL", layout="centered")
st.title("üß™ Convert Chemical Image ‚Üí MOL File")
st.markdown("Upload a chemical structure image. You'll get a `.mol` file you can open in ChemDraw or any molecular editor.")

uploaded_file = st.file_uploader("Upload JPEG/PNG/TIFF", type=["jpg", "jpeg", "png", "tiff"])

if uploaded_file is not None:
    st.image(uploaded_file, caption="Uploaded Image", use_column_width=True)

    try:
        with st.spinner("üî¨ Converting image to molecule..."):
            smiles = image_to_smiles(uploaded_file)
            mol_block = smiles_to_mol_block(smiles)
        st.success("‚úÖ Structure converted!")
        st.markdown("### SMILES:")
        st.code(smiles, language="none")
        st.markdown(get_mol_download_link(mol_block), unsafe_allow_html=True)
    except Exception as e:
        st.error(f"‚ùå Error: {e}")
