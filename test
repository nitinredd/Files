import fitz  # PyMuPDF
import pytesseract
from PIL import Image
from docx import Document
import io
import numpy as np

def convert_pdf_to_word(pdf_path, output_path, dpi=300):
    """
    Convert a scanned PDF to Word document using PyMuPDF and OCR.
    
    Args:
        pdf_path (str): Path to the input PDF file
        output_path (str): Path where the Word document will be saved
        dpi (int): DPI for image rendering (higher means better quality but slower)
    """
    try:
        # Open the PDF
        pdf_document = fitz.open(pdf_path)
        doc = Document()
        
        for page_num in range(pdf_document.page_count):
            print(f"Processing page {page_num + 1}/{pdf_document.page_count}...")
            
            # Get the page
            page = pdf_document[page_num]
            
            # Convert page to image
            pix = page.get_pixmap(matrix=fitz.Matrix(dpi/72, dpi/72))
            
            # Convert to PIL Image
            img = Image.frombytes("RGB", [pix.width, pix.height], pix.samples)
            
            # Extract text using OCR
            text = pytesseract.image_to_string(img)
            
            # Add a page break if it's not the first page
            if page_num > 0:
                doc.add_page_break()
            
            # Add the extracted text to the document
            doc.add_paragraph(text)
            
            # Clean up
            img.close()
        
        # Save the document
        doc.save(output_path)
        print(f"Document successfully saved to {output_path}")
        
        # Close the PDF
        pdf_document.close()
        
    except Exception as e:
        print(f"An error occurred: {str(e)}")

def get_ocr_confidence(image):
    """
    Get OCR confidence score for an image
    """
    data = pytesseract.image_to_data(image, output_type=pytesseract.Output.DICT)
    confidences = [int(conf) for conf in data['conf'] if conf != '-1']
    return sum(confidences) / len(confidences) if confidences else 0

if __name__ == "__main__":
    # Example usage
    pdf_path = "input.pdf"
    output_path = "output.docx"
    convert_pdf_to_word(pdf_path, output_path)
