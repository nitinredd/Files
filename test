import os
import streamlit as st
import tempfile
import logging
from google import genai

# Configure logging
logging.basicConfig(level=logging.DEBUG)
logger = logging.getLogger(__name__)

# Initialize the client (no location or explicit project ID is provided)
client = genai.Client()

st.title("Gemini Audio Transcription & Description")
st.write("Upload an audio file to transcribe it in the format of timecode, speaker, and caption.")

# Upload an audio file (mp3 or wav)
uploaded_audio = st.file_uploader("Upload Audio File", type=["mp3", "wav"])
if uploaded_audio is not None:
    # Save the uploaded file to a temporary file
    with tempfile.NamedTemporaryFile(delete=False, suffix=".mp3") as tmp_file:
        tmp_file.write(uploaded_audio.read())
        file_path = tmp_file.name
    st.write(f"Audio file saved locally at: {file_path}")

    try:
        # Upload the local file to Gemini using the new API method
        myfile = client.files.upload(file=file_path)
    except Exception as e:
        st.error(f"Error uploading file: {e}")
        logger.error("File upload error", exc_info=True)
    else:
        # Define the transcription prompt
        prompt = (
            "Can you transcribe this interview, in the format of timecode, speaker, caption.\n"
            "Use speaker A, speaker B, etc. to identify speakers."
        )
        # Create the contents array with the prompt and the uploaded file
        contents = [prompt, myfile]
        try:
            # Generate content using the specified Gemini model
            response = client.models.generate_content(
                model="gemini-2.0-flash",
                contents=contents
            )
            output_text = response.text
            st.subheader("Gemini Output")
            st.text_area("Output", output_text, height=300)
            st.download_button("Download Output", output_text, file_name="output.txt", mime="text/plain")
        except Exception as e:
            st.error(f"Error generating content: {e}")
            logger.error("Content generation error", exc_info=True)
