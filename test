// src/components/ProductDetail.jsx
import React from 'react';
import { downloadPdfUrl, fetchSchemeImageUrl } from '../api';

export default function ProductDetail({ meta, details }) {
  // If no product selected
  if (!meta) {
    return (
      <div className="p-6 text-gray-500 bg-white rounded-2xl shadow-sm">
        <div className="text-lg font-medium">Select a product to view details</div>
        <div className="text-sm mt-2">Product metadata and structured tables will appear here.</div>
      </div>
    );
  }

  // Build the endpoint URLs
  const pdfUrl = downloadPdfUrl(meta.id);
  const schemeImageUrl = fetchSchemeImageUrl(meta.id);

  return (
    <div className="p-6 bg-white rounded-2xl shadow-lg">
      <div className="flex justify-between items-start">
        <div>
          <h2 className="text-2xl font-bold text-primary">{meta.name}</h2>
          <div className="text-sm text-purple-700">{meta.reaction_type}</div>
        </div>
        <div className="flex gap-2 items-center">
          {/* Scheme image preview opens in new tab; file download will trigger FileResponse */}
          <a
            href={schemeImageUrl}
            target="_blank"
            rel="noreferrer"
            className="px-3 py-1 rounded-md bg-secondary/20 text-secondary text-sm"
            title="Open synthetic scheme image"
          >
            View Scheme
          </a>

          <a
            href={pdfUrl}
            className="px-3 py-1 rounded-md bg-accent/10 text-accent text-sm"
            target="_blank"
            rel="noreferrer"
            // 'download' attribute is OK for same-origin; backend FileResponse also sets headers to force download
            download={`${meta.name}.pdf`}
            title="Download full PDF"
          >
            Download PDF
          </a>
        </div>
      </div>

      <div className="mt-6 space-y-4">
        <div>
          <h4 className="text-sm text-gray-500">API Name</h4>
          <div className="mt-1 p-3 bg-gray-50 rounded">{details.api_name || '—'}</div>
        </div>

        <div>
          <h4 className="text-sm text-gray-500">Reaction Chemistry</h4>
          <div className="mt-1 p-3 bg-gray-50 rounded">{details.reaction_chemistry || '—'}</div>
        </div>

        <div>
          <h4 className="text-sm text-gray-500">Yield</h4>
          <div className="mt-1 p-3 bg-gray-50 rounded">{details.yield || '—'}</div>
        </div>

        <div>
          <h4 className="text-sm text-gray-500">Procedure</h4>
          <div className="mt-1 p-3 bg-white rounded border whitespace-pre-wrap">{details.procedure || '—'}</div>
        </div>

        <div>
          <h4 className="text-sm text-gray-500">Tables</h4>
          {details.tables && details.tables.length > 0 ? (
            details.tables.map((t, idx) => (
              <div className="mt-3" key={idx}>
                {t.headers && t.headers.length > 0 ? (
                  <div className="overflow-auto rounded-lg border">
                    <table className="min-w-full divide-y">
                      <thead className="bg-gray-50">
                        <tr>
                          {t.headers.map((h, i) => <th key={i} className="px-4 py-2 text-left text-xs font-medium text-gray-600">{h}</th>)}
                        </tr>
                      </thead>
                      <tbody className="bg-white divide-y">
                        {t.rows.map((r, ri) => (
                          <tr key={ri}>
                            {r.map((c, ci) => <td key={ci} className="px-4 py-2 text-sm">{c}</td>)}
                          </tr>
                        ))}
                      </tbody>
                    </table>
                  </div>
                ) : (
                  <pre className="bg-gray-50 p-3 rounded whitespace-pre-wrap">{t.raw_md}</pre>
                )}
              </div>
            ))
          ) : <div className="text-sm text-gray-500">No tabular data detected.</div>}
        </div>

        {/* Scheme image preview shown below tables for better layout */}
        <div className="mt-4">
          <h4 className="text-sm text-gray-500 mb-2">Synthetic Scheme Preview</h4>
          <div className="w-full bg-gray-50 rounded p-3 flex items-center justify-center">
            <img
              src={schemeImageUrl}
              alt={`${meta.name} scheme`}
              onError={(e) => {
                // show placeholder on error
                e.currentTarget.style.display = 'none';
                // optionally show fallback text
                const parent = e.currentTarget.parentNode;
                if (parent) {
                  const node = document.createElement('div');
                  node.textContent = 'Scheme image not available.';
                  node.className = 'text-sm text-gray-500';
                  parent.appendChild(node);
                }
              }}
              style={{ maxWidth: '100%', maxHeight: '360px', objectFit: 'contain', borderRadius: '8px' }}
            />
          </div>
        </div>
      </div>
    </div>
  );
}
